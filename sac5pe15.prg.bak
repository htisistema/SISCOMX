********************
* LISTAGEM CLASSIFICACAO DOS PRODUTO MAIS VENDIDOS
********************
FUNCTION sac5pe15
**************
LOCAL MPRG:='SAC5PE15',;
      lci,cci,lba,cba,opcao,i,mdata1,mdata2,;
      mcod_merc,mmerc,mtot_vlr,mtot_quantd,mtot_prunit,mger_vlr,mger_quantd,;
      mger_prunit,m_produto:={},mlucro,mdia,mop,mc_real,mc_merc,;
      mquantd_merc,mgrupo,msubgrupo,mcod_espe,mcod_ven,mcod_ope,mcod_forn,;
      mtot_comissao:=0

PRIVATE mtraco,telaprint,mtit,mtipo,mpag,mcod_cli,;
        mtipo_imp,mimp_tipo:=0,marq:=SPACE(35),cons_cli:={}

IF ! ver_nivel(mprg,'RELATORIO CLASSIFICACAO DOS PRODUTOS MAIS VENDIDOS (PEDIDO)','15',nivel_acess,,'AMBIE')
        RETURN NIL
ENDIF
mtraco := REPLI('=',132)
lci := cci := 0
lba := 16
cba := 90
*----------------------------------------------------------------------------
CLOSE ALL
IF ! AbriArq('sacgrupo','grup');RETURN NIL;ENDIF
IF ! AbriArq('sacespe','espe');RETURN NIL;ENDIF
IF ! AbriArq('saccli','cli');RETURN NIL;ENDIF
*----------------------------------------------------------------------------
op_tela(10,08,24,89,' CLASSIFICAO DOS PRODUTOS ')
WHILE .T.
        mtipo_imp := m_indiv[1,18]
        mcod_merc := SPACE(5)
        mmerc := SPACE(40)
        mlucro := mtot_vlr := mtot_quantd := mtot_prunit := mger_vlr := ;
        mger_quantd := mger_prunit := mop := mquantd_merc := mcod_cli := ;
        mgrupo := msubgrupo := mcod_espe := mcod_ven := mcod_ope := ;
        mcod_forn := mtot_comissao:= i := 0
        mdata1 := mdata_sis - 30
        mdata2 := mdata_sis
        mc_real := mc_merc := SPACE(1)
        ASIZE(m_produto,0)
        mensagem('Preencha os Campos - <ESC>p/Abandonar')
        @ lci+12,cci TO lci+12,cba
        @ lci+13,cci SAY ' Lucro Geral '
        @ lci+13,cci+15 SAY ' Lucro p/Prod. '
        @ lci+13,cci+31 SAY ' Quantidade '
        @ lci+13,cci+44 SAY ' Preco Venda '
        @ lci+13,COL()+1 SAY ' Comissao '
        @ lci+13,COL()+1 SAY ' Descricao '
        DEVPOS(lci+1,cci+2);DEVOUT('Data Inicial...:')
        DEVPOS(lci+2,cci+2);DEVOUT('Data Final.....:')
        DEVPOS(lci+3,cci+2);DEVOUT('Codigo Cliente.:')
        DEVPOS(lci+4,cci+2);DEVOUT('Grupo..........:')
        DEVPOS(lci+5,cci+2);DEVOUT('Sub-Grupo......:')
        DEVPOS(lci+6,cci+2);DEVOUT('Especie Produto:')
        DEVPOS(lci+7,cci+2);DEVOUT('Codigo Vendedor:')
        DEVPOS(lci+8,cci+2);DEVOUT('Codigo Operador:')
        DEVPOS(lci+9,cci+2);DEVOUT('Cod. Fornecedor:')
        DEVPOS(lci+10,cci+2);DEVOUT('Custo REAL: [ ]  Custo MERCADORIA: [ ]')
        DEVPOS(lci+11,cci+2);DEVOUT('Quantidade de produtos a ser listado:')
        @ lci+1,cci+19 GET mdata1 PICT '99/99/99' VALID IF(EMPTY(mdata1),.F.,.T.)
        @ lci+2,cci+19 GET mdata2 PICT '99/99/99' VALID IF(mdata2 < mdata1 ,.F.,.T.)
        @ lci+3,cci+19 GET mcod_cli PICT '99999' VALID ver_cli(mcod_cli,lci+3,cci+25)
        @ lci+4,cci+19 GET mgrupo PICT '999' VALID IF(EMPTY(mgrupo),.T.,ver_gru(@mgrupo,lci+4,cci+24,.F.))
        @ lci+5,cci+19 GET msubgrupo PICT '99' VALID IF(EMPTY(msubgrupo),.T.,ver_sgru(mgrupo,msubgrupo,lci+5,cci+24,.F.))
        @ lci+6,cci+19 GET mcod_espe PICT '9999' VALID ver_espe(mcod_espe,lci+6,cci+24,,0)
        @ lci+7,cci+19 GET mcod_ven PICT '999' VALID IF(EMPTY(mcod_ven),.T.,ven(mcod_ven,lci+7,cci+24))
        @ lci+8,cci+19 GET mcod_ope PICT '999' VALID IF(EMPTY(mcod_ope),.T.,ven(mcod_ope,lci+8,cci+24))
        @ lci+9,cci+19 GET mcod_forn PICT '9999' VALID IF(EMPTY(mcod_forn),.T.,v_fornece(mcod_forn,lci+9,cci+24))
        @ lci+10,cci+15 GET mc_real PICT '@!' VALID mc_real $ 'X, '
        @ lci+10,cci+38 GET mc_merc PICT '@!' VALID mc_merc $ 'X, ' WHEN mc_real = ' '
        @ lci+11,cci+41 GET mquantd_merc PICT '9999' VALID lim_get() WHEN men_get(lci+13,cci+38,'Informe a quantidade de produto que deseja lista ou deixe em branco para listar TODOS')
        READ
        IF LASTKEY() = 27
                CLOSE ALL
                RELEASE ALL
                EXIT
        ENDIF
        IF EMPTY(mc_merc) .AND. EMPTY(mc_real)
                LOOP
        ENDIF
        IF mdata1 = mdata2
                mdia := 1
        ELSE
                mdia := mdata2 - mdata1
        ENDIF
        setcor(10)
        @ lci+13,cci+1 PROMPT ' Lucro Geral '
        @ lci+13,cci+15 PROMPT ' Lucro p/Prod. '
        @ lci+13,cci+31 PROMPT ' Quantidade '
        @ lci+13,cci+44 PROMPT ' Preco Venda '
        @ lci+13,COL()+1 PROMPT ' Comissao '
        @ lci+13,COL()+1 PROMPT ' Descricao '
        SET INTEN ON
        MENU TO mop
        setcor(1)
        marq := 'MAIS_PRO.REL'
        mensagem('Espere o Final da Impressao OK - [ESC]Abandonar')
        IF LASTKEY() = 27 .OR. ! imp_arq('MAIS_PRO.REL','R')
                LOOP
        ENDIF
        cons_merc := {}
        cComm  := "SELECT * FROM sacmerc "
        IF ! EMPTY(mgrupo) .OR. ! EMPTY(msubgrupo) .OR. ! EMPTY(mcod_forn) .OR. ! EMPTY(mcod_espe)
                cComm  := " WHERE "
        ENDIF
        IF ! EMPTY(mgrupo)
                cComm  := ccomm + " AND gru_sub LIKE "+sr_cdbvalue(STRZERO(mgrupo,3)+'%')
        ENDIF
        IF ! EMPTY(msubgrupo)
                cComm  := ccomm + " AND gru_sub = "+sr_cdbvalue(STRZERO(mgrupo,3)+STRZERO(msubgrupo,2))
        ENDIF
        IF ! EMPTY(mcod_forn)
                cComm  := ccomm + " AND cod_fab = "+sr_cdbvalue(STRZERO(mcod_forn,4))
        ENDIF
        IF ! EMPTY(mcod_espe)
                cComm  := ccomm + " AND especie = "+sr_cdbvalue(STRZERO(mcod_espe,4))
        ENDIF
        sr_getconnection():exec(ccomm,,.t.,@cons_merc)
        sr_getconnection():exec('COMMIT',,.f.)
        IF LEN(cons_merc) = 0
                atencao('Nao existe nenhum Produto...')
                LOOP
        ENDIF
        i:=0
        FOR i = 1 TO LEN(cons_merc)
                prog_imp(i,cons_merc[i,8]+'-'+cons_merc[i,9])
                cons_mov := {}
                                //           1                 2                 3                           4
                cComm  := "SELECT SUM(pquantd * pvlr_fat),SUM(pquantd),SUM(pquantd * pcust_real),SUM(pquantd * pcust_merc)"
                cComm  := ccomm + " FROM sacped_s WHERE sr_deleted = ' ' AND pdat_ped  BETWEEN "+sr_cdbvalue(mdata1)+" AND "+sr_cdbvalue(mdata2)
                cComm  := ccomm + " AND pcod_merc = "+sr_cdbvalue(cons_merc[i,8])
                ccomm := ccomm + " AND  (ppag = ' ' OR ppag IS NULL OR ppag = '*')"
                IF ! EMPTY(mcod_cli)
                        cComm  := ccomm + " AND pcod_cli = "+sr_cdbvalue(mcod_cli)
                ENDIF
                IF ! EMPTY(mcod_ope)
                        cComm  := ccomm + " AND pcod_oper = "+sr_cdbvalue(STRZERO(mcod_ope,3))
                ENDIF
                IF ! EMPTY(mcod_ven)
                        cComm  := ccomm + " AND pcod_vend = "+sr_cdbvalue(STRZERO(mcod_ven,3))
                ENDIF
                sr_getconnection():exec(ccomm,,.t.,@cons_mov)
                sr_getconnection():exec('COMMIT',,.f.)
                IF LEN(cons_mov) > 0
                        mger_vlr := mger_vlr + cons_mov[1,1]
                        mger_quantd := mger_quantd + cons_mov[1,2]
                        mtot_vlr := mtot_vlr + cons_mov[1,1]
                        mtot_quantd := mtot_quantd + cons_mov[1,2]
                        IF mc_real = 'X'
                                mtot_prunit := mtot_prunit + cons_mov[1,3]
                                mger_prunit := mger_prunit + cons_mov[1,3]
                        ELSE
                                mtot_prunit := mtot_prunit + cons_mov[1,4]
                                mger_prunit := mger_prunit + cons_mov[1,4]
                        ENDIF
                        IF mtot_prunit = 0
                                mlucro := 100
                        ELSE
                                mlucro := ((mtot_vlr-mtot_prunit)/mtot_vlr)*100
                        ENDIF
                        IF EMPTY(mtot_quantd)
                                mtot_vlr := mtot_quantd := mtot_prunit := 0
                                LOOP
                        ENDIF
                              //               1             2             3                 4                    5
                              //           6                7              8             9           10
                        AADD(m_produto,{cons_merc[i,8],cons_merc[i,9],mtot_quantd,mtot_prunit/mtot_quantd,mtot_vlr/mtot_quantd,;
                                        mtot_vlr,mtot_quantd/mdia,mtot_vlr-mtot_prunit,mlucro,mtot_vlr-mtot_prunit,;
                                        cons_mov[1,1] * (cons_merc[i,26]/100),cons_merc[i,26]})
                        mtot_comissao := mtot_comissao + (cons_mov[1,1] * (cons_merc[i,26]/100))
                        mtot_vlr := mtot_quantd := mtot_prunit := 0
                ENDIF
        NEXT
        IF mc_real = 'X'
                DO CASE
                        CASE mop = 1
                                ASORT(m_produto,,,{|x,y| x[8] > y[8]})
                                mtit = 'CLASSIFICACAO PRODUTO pelo Lucro Geral (CUSTO REAL) p/PEDIDO'
                        CASE mop = 2
                                ASORT(m_produto,,,{|x,y| x[9] > y[9]})
                                mtit = 'CLASSIFICACAO PRODUTO pelo Lucro Individual (CUSTO REAL) p/PEDIDO'
                        CASE mop = 3
                                ASORT(m_produto,,,{|x,y| x[3] > y[3]})
                                mtit = 'CLASSIFICACAO PRODUTO pela quantidade (CUSTO REAL) p/PEDIDO'
                        CASE mop = 4
                                ASORT(m_produto,,,{|x,y| x[6] > y[6]})
                                mtit = 'CLASSIFICACAO PRODUTO pelo Preco de Venda (CUSTO REAL) p/PEDIDO'
                        CASE mop = 5
                                ASORT(m_produto,,,{|x,y| x[12] > y[12]})
                                mtit = 'CLASSIFICACAO PRODUTO por COMISSAO (CUSTO REAL) p/PEDIDO'
                        CASE mop = 6
                                ASORT(m_produto,,,{|x,y| x[2] < y[2]})
                                mtit = 'CLASSIFICACAO PRODUTO por COMISSAO (CUSTO REAL) p/DESCRICAO'
                ENDCASE
        ELSE
                DO CASE
                        CASE mop = 1
                                ASORT(m_produto,,,{|x,y| x[8] > y[8]})
                                mtit = 'CLASSIFICACAO PRODUTO pelo Lucro Geral (CUSTO MERCADORIA) p/PEDIDO'
                        CASE mop = 2
                                ASORT(m_produto,,,{|x,y| x[9] > y[9]})
                                mtit = 'CLASSIFICACAO PRODUTO pelo Lucro Individual (CUSTO MERCADORIA) p/PEDIDO'
                        CASE mop = 3
                                ASORT(m_produto,,,{|x,y| x[3] > y[3]})
                                mtit = 'CLASSIFICACAO PRODUTO pela quantidade (CUSTO MERCADORIA) p/PEDIDO'
                        CASE mop = 4
                                ASORT(m_produto,,,{|x,y| x[6] > y[6]})
                                mtit = 'CLASSIFICACAO PRODUTO pela Preco de venda (CUSTO MERCADORIA) p/PEDIDO'
                        CASE mop = 5
                                ASORT(m_produto,,,{|x,y| x[12] > y[12]})
                                mtit = 'CLASSIFICACAO PRODUTO por COMISSAO (CUSTO MERCADORIA) p/PEDIDO'
                        CASE mop = 6
                                ASORT(m_produto,,,{|x,y| x[2] < y[2]})
                                mtit = 'CLASSIFICACAO PRODUTO por COMISSAO (CUSTO MERCADORIA) p/DESCRICAO'
                ENDCASE
        ENDIF
        mpag = 1
        mtipo = 'De '+DTOC(mdata1)+' ate '+DTOC(mdata2)+' Intervalo de '+STRZERO(mdia,4)+' dias'
        IF ! EMPTY(mcod_cli)
                mtipo = mtipo+' - Cod.Cliente: '+mcod_cli
        ENDIF
        IF ! EMPTY(mcod_forn)
                mtipo = mtipo+' - Fornecedor: '+STRZERO(mcod_forn,4)+'-'+forn->razao
        ENDIF
        IF ! EMPTY(mcod_ven)
                mtipo = mtipo+' - Vendedor: '+STRZERO(mcod_ven,3)
        ENDIF
        cabecalho(mpag,mtit,mtipo,mprg)
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT('Produto                                  ')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('  Quantd.')
        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Med.Custo')
        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Med.Venda')
        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Total Venda')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('(%)Vend')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('  Lucro R$')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('Lucro %')
        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Comis.R$')
        DEVPOS(PROW(),PCOL()+1);DEVOUT('- (%)')
        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
        i := 0
        IF EMPTY(mquantd_merc) .OR. mquantd_merc > LEN(m_produto)
                mquantd_merc := LEN(m_produto)
        ENDIF
        FOR i = 1 TO mquantd_merc
                imprt(mtipo_imp,'C')
                DEVPOS(PROW()+1,00);DEVOUT(m_produto[i,1]+'-'+LEFT(m_produto[i,2],35))
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(m_produto[i,3],'999999.99')
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(m_produto[i,4],'999,999.99')
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(m_produto[i,5],'999,999.99')
                DEVPOS(PROW(),PCOL()+1);DEVOUTPICT(m_produto[i,6],'99,999,999.99')
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM((m_produto[i,6]/mger_vlr)*100,'999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_produto[i,8],'999,999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_produto[i,9],'9999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_produto[i,11],'99,999.99'))
                DEVPOS(PROW(),PCOL()+1);DEVOUT(TRANSFORM(m_produto[i,12],'999.99'))
                IF PROW() >= 59
                        mpag ++
                        EJECT
                        cabecalho(mpag,mtit,mtipo,mprg)
                        imprt(mtipo_imp,'C')
                        DEVPOS(PROW()+1,00);DEVOUT('Produto                                  ')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT('  Quantd.')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Med.Custo')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Med.Venda')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Total Venda')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT('(%)Vend')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT('  Lucro R$')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT('Lucro %')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT(' Comis.R$')
                        DEVPOS(PROW(),PCOL()+1);DEVOUT('- (%)')
                        DEVPOS(PROW()+1,00);DEVOUT(mtraco)
                        imprt(mtipo_imp,'C')
                ENDIF
        NEXT
        IF PROW() >= 57
                mpag ++
                EJECT
                cabecalho(mpag,mtit,mtipo,mprg)
        ENDIF
        imprt(mtipo_imp,'N')
        DEVPOS(PROW()+1,00);DEVOUT(REPLI('-',80))
        imprt(mtipo_imp,'C')
        DEVPOS(PROW()+1,00);DEVOUT('T O T A L   G E R A L:')
        DEVPOS(PROW(),38);DEVOUTPICT(mger_quantd,'99,999,999.99')
        DEVPOS(PROW(),52);DEVOUTPICT(mger_prunit / mger_quantd,'999,999.99')
        DEVPOS(PROW(),63);DEVOUTPICT(mger_vlr / mger_quantd,'999,999.99')
        DEVPOS(PROW(),74);DEVOUTPICT(mger_vlr,'99,999,999.99')
        DEVPOS(PROW(),95);DEVOUT(TRANSFORM(mger_vlr - mger_prunit,'999,999.99'))
        DEVPOS(PROW(),113);DEVOUT(TRANSFORM(mtot_comissao,'999,999.99'))
        DEVPOS(PROW()+2,00);DEVOUT(TIME())
        imprt(mtipo_imp,'N')
        EJECT
        SETPRC(00,00)
        SET DEVI TO SCREEN;SET PRINT TO;SET PRINT OFF
        conf_impressao(marq)
ENDDO
wvw_lclosewindow()
RETURN NIL
**************************** F I M ****************************************************